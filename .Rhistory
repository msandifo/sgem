slab.dir ="/Volumes/data/data/global/slabs/"
slab.grd.dir <- paste0( slab.dir, slab.model, "/allslabs" )
slab.dep.files <- list.files(slab.grd.dir, pattern="_dep_", full.names=T)
# slab.str.files <- list.files(slab.grd.dir, pattern="_str_", full.names=T)
# slab.dip.files <- list.files(slab.grd.dir, pattern="_dip_", full.names=T)
# slab.unc.files <- list.files(slab.grd.dir, pattern="_unc_", full.names=T)
# slab.thk.files <- list.files(slab.grd.dir, pattern="_thk_", full.names=T)
#
# raster::raster(slab.dep.files[1:12])
# slab.dep.files[1]
slab.names <-substr(slab.dep.files,48,50)
assemble_slab
#7,8,12, 20
for (i in 22) {#length(slab.names):1) {
print( paste(slab.names[i], ":", i))
slab <- assemble_slab(slab.name=slab.names[i], terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F)
write.csv(slab$vo, file= paste0("data/",slab$name,"2.csv"))
}
#7,8,12, 20
for (i in 1:length(slab.names)) {#length(slab.names):1) {
print( paste(slab.names[i], ":", i))
slab <- assemble_slab(slab.name=slab.names[i], terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F)
write.csv(slab$vo, file= paste0("data/",slab$name,"2.csv"))
}
v <-read_vo(fn= "data/sam2.csv")
library(sgem)
v <-read_vo(fn= "data/sam2.csv")
cm.sam <-read_geoproc() %>% as.data.table() %>%
filter_geoproc_ages()  %>%
merge_geoproc_vo(v ) #%>%
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
library(sgem)
v <-read_vo(fn= "data/sam2.csv")
cm.sam <-read_geoproc() %>% as.data.table() %>%
filter_geoproc_ages()  %>%
merge_geoproc_vo(v ) #%>%
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
gpl <- function(volcano){
get_geoproc_loc(df, get_v_loc( volcano ), rad=rad) %>% as.data.frame() %>%dplyr::mutate(location=get_v_name(volcano))
}
purrr::map_df(volcanoes, gpl)
}
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
library(sgem)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
library(sgem)
v <-read_vo(fn= "data/sam2.csv")
cm.sam <-read_geoproc() %>% as.data.table() %>%
filter_geoproc_ages()  %>%
merge_geoproc_vo(v ) #%>%
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
cm.sam <-read_geoproc() %>% as.data.table() %>%
filter_geoproc_ages()  #%>% merge_geoproc_vo(v ) # %>% factor_depths(int=c(25,10))
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")),rad=5)
ggplot(ss    , aes( sio2.wt, k2o.wt+na2o.wt, col=location )) +
geom_point()+
hrbrthemes::theme_ipsum()+
theme(legend.position="bottom")+
labs(title = "sgem in action")
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")),rad=5)
get_v_country(country="Chile")
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Ecua")), rad=5)
ggplot(ss    , aes( sio2.wt, k2o.wt+na2o.wt, col=location )) +
geom_point()+
hrbrthemes::theme_ipsum()+
theme(legend.position="bottom")+
labs(title = "sgem in action")
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
get_v_country(country="Colo")
ggplot(ss    , aes( sio2.wt, k2o.wt+na2o.wt, col=location )) +
geom_point()+
hrbrthemes::theme_ipsum()+
theme(legend.position="bottom")+
labs(title = "sgem in action")
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
library(sgem)
v <-read_vo(fn= "data/sam2.csv")
cm.sam <-read_geoproc() %>% as.data.table() %>%
filter_geoproc_ages()  #%>% merge_geoproc_vo(v ) # %>% factor_depths(int=c(25,10))
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
gpl <- function(volcano){
print(volcano)
if(volcano !="Unnamed")
get_geoproc_loc(df, get_v_loc( volcano ), rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano))
}
purrr::map_df(volcanoes, gpl)
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#note still to deal
gpl <- function(volcano){
print(volcano)
print(get_v_loc(volcano))
if (length(get_v_loc( volcano ))==2)
get_geoproc_loc(df, get_v_loc( volcano ), rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1]) else
if  (length(get_v_loc( volcano )==4)){
rbind( get_geoproc_loc(df, get_v_loc( volcano )[1,3], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1]),
get_geoproc_loc(df, get_v_loc( volcano )[2,4], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1]))
}
purrr::map_df(volcanoes, gpl)
}
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
ss
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
#note still to deal
gpl <- function(volcano){
print(volcano)
print(get_v_loc(volcano))
if (length(get_v_loc( volcano ))==2)
get_geoproc_loc(df, get_v_loc( volcano ), rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano), volcano=volcano) else
if  (length(get_v_loc( volcano )==4)){
rbind( get_geoproc_loc(df, get_v_loc( volcano )[1,3], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1], volcano=volcano),
get_geoproc_loc(df, get_v_loc( volcano )[2,4], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1]), volcano=volcano)
}
purrr::map_df(volcanoes, gpl)
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
)))
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
#note still to deal
gpl <- function(volcano){
print(volcano)
print(get_v_loc(volcano))
if (length(get_v_loc( volcano ))==2)
get_geoproc_loc(df, get_v_loc( volcano ), rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano), volcano=volcano) else
if  (length(get_v_loc( volcano )==4)){
rbind( get_geoproc_loc(df, get_v_loc( volcano )[1,3], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1], volcano=volcano),
get_geoproc_loc(df, get_v_loc( volcano )[2,4], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1]), volcano=volcano)
}
purrr::map_df(volcanoes, gpl)
}
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Ecua")), rad=5)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Peru")), rad=5)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=5)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")), rad=4)
volcanoes= c(get_v_country(country="Chile"))
volcanoes
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %head(-1), rad=4)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %>%head(-1), rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %>%head(-1), rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %>%head(-1), rad=4)
get_geoproc_loc(df, get_v_loc( volcanoes[1] )[c(1:2)],
)
get_geoproc_loc(df, get_v_loc( volcanoes[1] )[c(1:2)]
)
get_geoproc_loc(cm.sam, get_v_loc( volcanoes[1] )[c(1:2)]
)
cm.sam$latitude.min
cm.sam$latitude.min[which(!is.numeric(cm.sam$latitude.min))]
cm.sam$latitude.min[which(is.numeric(cm.sam$latitude.min))]
}
which(is.numeric(cm.sam$latitude.min))
#note still to deal
gpl <- function(volcano){
# print(volcano)
# print(get_v_name(volcano))
# print(get_v_loc(volcano))
if (length(get_v_name( volcano ))==1)
get_geoproc_loc(df, get_v_loc( volcano )[c(1:2)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano), volcano=volcano) else
if  (length(get_v_name( volcano )>1)){
rbind( get_geoproc_loc(df, get_v_loc( volcano )[c(1,3)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1], volcano=volcano[1]),
get_geoproc_loc(df, get_v_loc( volcano )[c(2,4)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[2]), volcano=volcano[2])
}
which(is.numeric(cm.sam$latitude.min))
(is.numeric(cm.sam$latitude.min))
purrr::map_df(volcanoes, gpl)
cm.sam$latitude.min
is.numeric(cm.sam$latitude.min)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %>%head(-1), rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
#note still to deal
gpl <- function(volcano){
print(volcano)
print(get_v_name(volcano))
# print(get_v_loc(volcano))
if (length(get_v_name( volcano ))==1)
get_geoproc_loc(df, get_v_loc( volcano )[c(1:2)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano), volcano=volcano) else
if  (length(get_v_name( volcano )>1)){
rbind( get_geoproc_loc(df, get_v_loc( volcano )[c(1,3)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1], volcano=volcano[1])
# ,
# get_geoproc_loc(df, get_v_loc( volcano )[c(2,4)], rad=rad) %>%
#   #as.data.frame() %>%
#   dplyr::mutate(location=get_v_name(volcano)[2]), volcano=volcano[2]
)
}
purrr::map_df(volcanoes, gpl)
}
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile")) %>%head(-1), rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' selction of all records in geoprc data fram (df) within a given distance *rad) of a list of volcanoe lcoations (volcanoes)
#'
#' @param df geoproc data frame
#' @param volcanoes volocano name list
#' @param rad distance
#'
#' @return
#' @export
#'
#' @examples
get_v_group <- function(  df,  volcanoes= c("Sumaco", "Revent", "Hudson"),rad=6){
#note still to deal
gpl <- function(volcano){
print(volcano)
print(get_v_name(volcano))
# print(get_v_loc(volcano))
if (length(get_v_name( volcano ))==1)
get_geoproc_loc(df, get_v_loc( volcano )[c(1:2)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano), volcano=volcano) else
if  (length(get_v_name( volcano )>1)){
get_geoproc_loc(df, get_v_loc( volcano )[c(1,3)], rad=rad) %>%
#as.data.frame() %>%
dplyr::mutate(location=get_v_name(volcano)[1], volcano=volcano[1])
# ,
# get_geoproc_loc(df, get_v_loc( volcano )[c(2,4)], rad=rad) %>%
#   #as.data.frame() %>%
#   dplyr::mutate(location=get_v_name(volcano)[2]), volcano=volcano[2]
}
purrr::map_df(volcanoes, gpl)
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Chile"))  , rad=4)
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
ggplot(ss    , aes( sio2.wt, k2o.wt+na2o.wt)) +
geom_point()+
hrbrthemes::theme_ipsum()+
theme(legend.position="bottom")+
labs(title = "sgem in action")
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
ggplot(ss    , aes( sio2.wt, k2o.wt+na2o.wt)) +
geom_point()+
hrbrthemes::theme_ipsum()+
theme(legend.position="bottom")+
labs(title = "sgem in action")
ss <-get_v_group(cm.sam,  volcanoes= c("Sumaco", "Revent", "Hudson", "Copa,"),rad=16)
ss <-get_v_group(cm.sam,  volcanoes= c(get_v_country(country="Colo")), rad=5)
vo<-purrr::map_df(slab.names, assemble_slab(slab.name=., terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F)$vo %>% mutate(slab=slab.name ))
as.slab <- function(slab.name) {
assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F)$vo %>% mutate(slab=slab.name )
}
## slab directory
library(slab)
slab.model <-"slab2"
slab.dir ="/Volumes/data/data/global/slabs/"
slab.grd.dir <- paste0( slab.dir, slab.model, "/allslabs" )
slab.dep.files <- list.files(slab.grd.dir, pattern="_dep_", full.names=T)
# slab.str.files <- list.files(slab.grd.dir, pattern="_str_", full.names=T)
# slab.dip.files <- list.files(slab.grd.dir, pattern="_dip_", full.names=T)
# slab.unc.files <- list.files(slab.grd.dir, pattern="_unc_", full.names=T)
# slab.thk.files <- list.files(slab.grd.dir, pattern="_thk_", full.names=T)
#
# raster::raster(slab.dep.files[1:12])
# slab.dep.files[1]
slab.names <-substr(slab.dep.files,48,50)
as.slab <- function(slab.name) {
assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F)$vo %>% mutate(slab=slab.name )
}
vo<-purrr::map_df(slab.names, as.slab)
as.slab <- function(slab.name) {
(assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F))$vo %>% dplyr::mutate(slab=slab.name )
}
vo<-purrr::map_df(slab.names, as.slab)
as.slab <- function(slab.name) {
(assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F))$vo %>% as.data.frame() %>%dplyr::mutate(slab=slab.name )
}
vo<-purrr::map_df(slab.names, as.slab)
write.csv(vo, file= paste0("data/vo_slab2.csv"))
as.slab <- function(slab.name) {
(assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F))$vo %>%
as.data.frame() %>%
dplyr::mutate(slab=slab.name ) %>%
dplyr::select(-mx,-my)
}
names(vo)
as.slab <- function(slab.name) {
(assemble_slab(slab.name=slab.name, terrain=F,coasts = F,rivers=F,
borders = F,cmt=F, ehb=F, hf=F, wsm=F, plates=F))$vo %>%
as.data.frame() %>%
dplyr::mutate(slab=slab.name ) %>%
dplyr::select(-mx,-my) %>%
dplyr::rename(elevation=elevation..m.)
}
vo<-purrr::map_df(slab.names, as.slab)
write.csv(vo, file= paste0("data/vo_slab2.csv"))
library(sgem)
read_vo <- function(fn ="data/vo_slab2.csv", slabs=NULL){
vo<- read.csv(fn)
if (!is.null(slab)) {
if (slab %in% vo$slab) vo <- vo %>% subset(slab %in% slabs) else
message(slab, "nit in volcano slab list" )
}
vo
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' Title
#'
#' @param fn
#' @param slabs  list of slabs to selct for default NULL
#'
#' @return
#' @export
#'
#' @examples
read_vo <- function(fn ="data/vo_slab2.csv", slabs=NULL){
vo<- read.csv(fn)
if (!is.null(slab)) {
if (slab %in% vo$slab) vo <- vo %>% subset(slab %in% slabs) else
message(slab, "nit in volcano slab list" )
}
vo
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
read_vo9(s="izu")
read_vo(s="izu")
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
read_vo()
#' Title
#'
#' @param fn
#' @param slabs  list of slabs to subset default NULL
#'
#' @return
#' @export
#'
#' @examples
read_vo <- function(fn ="data/vo_slab2.csv", slabs=NULL){
vo<- data.table::fread(fn)
if (!is.null(slab)) {
if (slab %in% vo$slab) vo <- vo %>% subset(slab %in% slabs) else
message(slab, "nit in volcano slab list" )
}
vo
}
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
#' Title
#'
#' @param fn
#' @param slabs  list of slabs to subset default NULL
#'
#' @return
#' @export
#'
#' @examples
read_vo <- function(fn ="data/vo_slab2.csv", slabs=NULL){
vo<- data.table::fread(fn)
if (!is.null(slab)) {
if (slab %in% vo$slab) vo <- vo %>% subset(slab %in% slabs) else
message(slab, "nit in volcano slab list" )
}
vo
}
read_vo()
source('/Volumes/data/Dropbox/msandifo/documents/programming/r/2020/sgem/R/misc.R')
library(rgdal)
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd")
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd") %>% raster::raster()
library(magrittr)
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd") %>% raster::raster()
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd") %>% raster::raster() %>% plot()
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd") %>% terra::rast() %>% plot()
readGDAL("data/allslabs/sam_slab2_dep_02.23.18.grd") %>% raster::raster() %>% terra::rast()
